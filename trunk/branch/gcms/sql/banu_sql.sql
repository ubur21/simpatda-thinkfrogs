CREATE TABLE ANGGARAN_STATUS (
  ID INTEGER NOT NULL,
  STATUS VARCHAR(100) CHARACTER SET NONE NOT NULL COLLATE NONE);


ALTER TABLE ANGGARAN_STATUS ADD CONSTRAINT PK_ANGGARAN_STATUS PRIMARY KEY (ID);

CREATE GENERATOR GEN_ANGGARAN_STATUS;

SET GENERATOR GEN_ANGGARAN_STATUS TO 0;


SET TERM ^ ;

CREATE TRIGGER ANGGARAN_STATUS_BI FOR ANGGARAN_STATUS
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN 
	/* enter trigger code here */ 
  IF (NEW.ID IS NULL) THEN
    NEW.ID = GEN_ID(GEN_ANGGARAN_STATUS, 1);	
END^
SET TERM ; ^

COMMIT WORK;

INSERT INTO ANGGARAN_STATUS (STATUS) VALUES ('Murni');
INSERT INTO ANGGARAN_STATUS (STATUS) VALUES ('Tambahan (ABT)');




CREATE TABLE ANGGARAN_TAHUN (
  ID INTEGER NOT NULL,
  ID_STATUS INTEGER,
  TAHUN1 VARCHAR(100) CHARACTER SET NONE NOT NULL COLLATE NONE,
  TAHUN2 VARCHAR(100) CHARACTER SET NONE COLLATE NONE);


ALTER TABLE ANGGARAN_TAHUN ADD CONSTRAINT PK_ANGGARAN_TAHUN PRIMARY KEY (ID);

CREATE GENERATOR GEN_ANGGARAN_TAHUN;

SET GENERATOR GEN_ANGGARAN_TAHUN TO 0;

SET TERM ^ ;

CREATE TRIGGER ANGGARAN_TAHUN_BI FOR ANGGARAN_TAHUN
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN 
	/* enter trigger code here */ 
  IF (NEW.ID IS NULL) THEN
    NEW.ID = GEN_ID(GEN_ANGGARAN_TAHUN, 1);
END^
SET TERM ; ^
COMMIT WORK;

INSERT INTO ANGGARAN_TAHUN (ID_STATUS, TAHUN1, TAHUN2) VALUES ('1', '2010', NULL);
INSERT INTO ANGGARAN_TAHUN (ID_STATUS, TAHUN1, TAHUN2) VALUES ('2', '333', NULL);


CREATE TABLE REKENING_KATEGORI (
  ID INTEGER NOT NULL,
  TIPE_KATEGORI VARCHAR(100) CHARACTER SET NONE NOT NULL COLLATE NONE,
  KELOMPOK_KATEGORI VARCHAR(100) CHARACTER SET NONE COLLATE NONE,
  NAMA_KATEGORI VARCHAR(255) CHARACTER SET NONE NOT NULL COLLATE NONE,
  SALDO_NORMAL INTEGER NOT NULL);


ALTER TABLE REKENING_KATEGORI ADD CONSTRAINT PK_REKENING_KATEGORI PRIMARY KEY (ID);

CREATE GENERATOR GEN_REKENING_KATEGORI;

SET GENERATOR GEN_REKENING_KATEGORI TO 0;

SET TERM ^ ;

CREATE TRIGGER REKENING_KATEGORI_BI FOR REKENING_KATEGORI
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN 
	/* enter trigger code here */ 
	IF(NEW.ID IS NULL) then
	NEW.ID = GEN_ID(GEN_REKENING_KATEGORI,1);
END^
SET TERM ; ^
COMMIT WORK;

INSERT INTO REKENING_KATEGORI (TIPE_KATEGORI, KELOMPOK_KATEGORI, NAMA_KATEGORI, SALDO_NORMAL) VALUES ('1', NULL, 'Aset', '-1');
INSERT INTO REKENING_KATEGORI (TIPE_KATEGORI, KELOMPOK_KATEGORI, NAMA_KATEGORI, SALDO_NORMAL) VALUES ('2', NULL, 'Utang', '1');
INSERT INTO REKENING_KATEGORI (TIPE_KATEGORI, KELOMPOK_KATEGORI, NAMA_KATEGORI, SALDO_NORMAL) VALUES ('3', NULL, 'Ekuitas', '1');
INSERT INTO REKENING_KATEGORI (TIPE_KATEGORI, KELOMPOK_KATEGORI, NAMA_KATEGORI, SALDO_NORMAL) VALUES ('4', NULL, 'Pendapatan', '1');
INSERT INTO REKENING_KATEGORI (TIPE_KATEGORI, KELOMPOK_KATEGORI, NAMA_KATEGORI, SALDO_NORMAL) VALUES ('5', NULL, 'Belanja', '-1');


CREATE TABLE REKENING_KODE (
  ID INTEGER NOT NULL,
  ID_PARENT INTEGER DEFAULT 0 NOT NULL,
  KODE_REKENING VARCHAR(100) CHARACTER SET NONE NOT NULL COLLATE NONE,
  NAMA_REKENING VARCHAR(100) CHARACTER SET NONE NOT NULL COLLATE NONE,
  TIPE VARCHAR(2) CHARACTER SET NONE NOT NULL COLLATE NONE,
  KELOMPOK VARCHAR(2) CHARACTER SET NONE NOT NULL COLLATE NONE,
  JENIS VARCHAR(2) CHARACTER SET NONE NOT NULL COLLATE NONE,
  OBJEK VARCHAR(2) CHARACTER SET NONE NOT NULL COLLATE NONE,
  RINCIAN VARCHAR(2) CHARACTER SET NONE NOT NULL COLLATE NONE,
  SUB1 VARCHAR(3) CHARACTER SET NONE COLLATE NONE,
  SUB2 VARCHAR(3) CHARACTER SET NONE COLLATE NONE,
  SUB3 VARCHAR(3) CHARACTER SET NONE COLLATE NONE,
  LEVEL_REKENING INTEGER DEFAULT 0 NOT NULL,
  CHILD_COUNT INTEGER DEFAULT 0 NOT NULL,
  ID_KATEGORI INTEGER NOT NULL,
  PERSEN_TARIF DECIMAL(3, 2) DEFAULT 0.00 NOT NULL,
  TARIF_DASAR DECIMAL(18, 2) DEFAULT 0.00 NOT NULL,
  TARIF_TAMBAHAN DECIMAL(18, 2) DEFAULT 0.00 NOT NULL,
  VOLUME_DASAR DECIMAL(18, 2) DEFAULT 0.00 NOT NULL);


ALTER TABLE REKENING_KODE ADD CONSTRAINT PK_REKENING_KODE PRIMARY KEY (ID);

CREATE GENERATOR GEN_REKENING_KODE;

SET TERM ^ ;

CREATE TRIGGER REKENING_KODE_BI FOR REKENING_KODE
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN 
	/* enter trigger code here */
	if(new.id is null) then
	new.id = gen_id(gen_rekening_kode,1);
END^
SET TERM ; ^
COMMIT WORK;

INSERT INTO G_FRONTMENUS (NID_GROUPFRONTMENUS, CMENU, CFUNCTION, CPARAM, NURUT, BHIDE, BSECURE, WIDTH, HEIGHT, IS_MAIN) VALUES ('3', 'Tahun Anggaran', 'm_anggaran_tahun', ' ', '9', '0', '1', '750', '500', '0');
INSERT INTO G_FRONTMENUS (NID_GROUPFRONTMENUS, CMENU, CFUNCTION, CPARAM, NURUT, BHIDE, BSECURE, WIDTH, HEIGHT, IS_MAIN) VALUES ('3', 'Status Anggaran', 'm_anggaran_status', '', '8', '0', '1', '600', '350', '0');
INSERT INTO G_FRONTMENUS (NID_GROUPFRONTMENUS, CMENU, CFUNCTION, CPARAM, NURUT, BHIDE, BSECURE, WIDTH, HEIGHT, IS_MAIN) VALUES ('3', 'Kategori Rekening', 'm_rekening_kategori', ' ', '10', '0', '1', '750', '500', '0');
INSERT INTO G_FRONTMENUS (NID_GROUPFRONTMENUS, CMENU, CFUNCTION, CPARAM, NURUT, BHIDE, BSECURE, WIDTH, HEIGHT, IS_MAIN) VALUES ('3', 'Rekening', 'm_rekening_kode', '', '11', '0', '1', '1150', '500', '0');

INSERT INTO G_MODULS (CPATH) VALUES ('../extensions/anggaran/anggaran.php');
INSERT INTO G_MODULS (CPATH) VALUES ('../extensions/rekening/rekening.php');


GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON ANGGARAN_STATUS TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON ANGGARAN_TAHUN TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON REKENING_KATEGORI TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON REKENING_KODE TO SYSDBA WITH GRANT OPTION;

COMMIT WORK;