/****************** GENERATORS ********************/

CREATE GENERATOR G_CONFIG_NID;
CREATE GENERATOR G_GRANTED_NID;
CREATE GENERATOR G_GROUPMENUS_NID;
CREATE GENERATOR G_HISTORY_NID;
CREATE GENERATOR G_MODULS_NID;
CREATE GENERATOR G_TABLEINSTALLED_NID;
CREATE GENERATOR G_USERS_NID;

/******************** TABLES **********************/

CREATE TABLE G_CONFIG
(
  NID Integer NOT NULL,
  CNAME Varchar(100) NOT NULL,
  CCONFIG Varchar(200) NOT NULL,
  NCONFIG Integer NOT NULL,
  DCONFIG Timestamp NOT NULL,
  CONSTRAINT PK_G_CONFIG PRIMARY KEY (NID)
);

CREATE TABLE G_GRANTED
(
  NID Integer NOT NULL,
  NID_USERS Integer NOT NULL,
  NID_MODULS Integer NOT NULL,
  NSTATUS Integer NOT NULL,
  CONSTRAINT PK_GRANTED PRIMARY KEY (NID)
);

CREATE TABLE G_GROUPMENUS
(
  NID Integer NOT NULL,
  CGROUP Varchar(20) NOT NULL,
  NURUT Integer NOT NULL,
  CONSTRAINT PK_GROUPMENUS PRIMARY KEY (NID)
);

CREATE TABLE G_HISTORY
(
  NID Integer NOT NULL,
  NID_USERS Integer NOT NULL,
  DLOGIN Timestamp NOT NULL,
  DLOGOUT Timestamp,
  CIP Varchar(20) NOT NULL,
  CONSTRAINT PK_HISTORY PRIMARY KEY (NID)
);

CREATE TABLE G_MODULS
(
  NID Integer NOT NULL,
  CPATH Varchar(200) NOT NULL,
  CONSTRAINT PK_MODULS PRIMARY KEY (NID)
);

CREATE TABLE G_TABLEINSTALLED
(
  NID Integer NOT NULL,
  NID_MODULS Integer NOT NULL,
  CTABLE Varchar(50) NOT NULL,
  CONSTRAINT PK_TABLEINSTALLED PRIMARY KEY (NID)
);

ALTER TABLE G_TABLEINSTALLED ADD CONSTRAINT FK_TABLEINSTALLED_MODULS
  FOREIGN KEY (NID_MODULS) REFERENCES G_MODULS (NID);

CREATE TABLE G_USERS
(
  NID Integer NOT NULL,
  CUSER Varchar(30) NOT NULL,
  CPASS Varchar(40) NOT NULL,
  CNAME Varchar(100) NOT NULL,
  CEMAIL Varchar(50) NOT NULL,
  NSTATUS Integer NOT NULL,
  CONSTRAINT PK_USERS PRIMARY KEY (NID)
);

/******************** TRIGGERS ********************/

SET TERM ^ ;
CREATE TRIGGER G_CONFIG_BI FOR G_CONFIG ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_CONFIG_NID, 1);
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER G_GRANTED_BI FOR G_GRANTED ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_GRANTED_NID, 1);
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER G_GROUPMENUS_BI FOR G_GROUPMENUS ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_GROUPMENUS_NID, 1);
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER G_HISTORY_BI FOR G_HISTORY ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_HISTORY_NID, 1);
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER G_MODULS_BI FOR G_MODULS ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_MODULS_NID, 1);
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER G_TABLEINSTALLED_BI FOR G_TABLEINSTALLED ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_TABLEINSTALLED_NID, 1);
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER G_USERS_BI FOR G_USERS ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_USERS_NID, 1);
END^
SET TERM ; ^

INSERT INTO G_USERS(CUSER, CPASS, CNAME, CEMAIL, NSTATUS) 
  VALUES ('admin', '21232f297a57a5a743894a0e4a801fc3', 'Administrator', 'admin@gcms.org', 4);

INSERT INTO G_GROUPMENUS(CGROUP, NURUT) VALUES ('Manage', '10');
INSERT INTO G_GROUPMENUS(CGROUP, NURUT) VALUES ('Tools', '20');
INSERT INTO G_GROUPMENUS(CGROUP, NURUT) VALUES ('Others', '30');
INSERT INTO G_GROUPMENUS(CGROUP, NURUT) VALUES ('Miscellanous', '40');
INSERT INTO G_GROUPMENUS(CGROUP, NURUT) VALUES ('References', '50');


/************** MOVED FROM MENU EXTENSION *****************************/


CREATE TABLE G_GROUPFRONTMENUS(
  NID Integer NOT NULL,
  CGROUP Varchar(50) NOT NULL,
  NURUT Integer NOT NULL,
  BHIDE Integer NOT NULL,
  CONSTRAINT PK_GROUPFRONTMENUS PRIMARY KEY (NID)
);

CREATE GENERATOR G_GROUPFRONTMENUS_NID;

SET    TERM !! ;
CREATE TRIGGER G_GROUPFRONTMENUS_BI FOR G_GROUPFRONTMENUS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_GROUPFRONTMENUS_NID, 1);
END!!
SET TERM ; !!



CREATE TABLE G_FRONTMENUS(
  NID Integer NOT NULL,
  NID_GROUPFRONTMENUS Integer NOT NULL,
  CMENU Varchar(50) NOT NULL,
  CFUNCTION Varchar(50) NOT NULL,
  CPARAM Varchar(100) NOT NULL,
  NURUT Integer NOT NULL,
  BHIDE Integer DEFAULT 0 NOT NULL,
  BSECURE Integer DEFAULT 1 NOT NULL,
  CONSTRAINT PK_FRONTMENUS PRIMARY KEY (NID)
);
ALTER TABLE G_FRONTMENUS ADD CONSTRAINT FK_FRONTMENUS_GROUP
  FOREIGN KEY (NID_GROUPFRONTMENUS) REFERENCES G_GROUPFRONTMENUS (NID);

CREATE GENERATOR G_FRONTMENUS_NID;

SET TERM ^;
CREATE TRIGGER G_FRONTMENUS_BI FOR G_FRONTMENUS ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_FRONTMENUS_NID, 1);
END^
SET TERM ;^

ALTER TABLE G_FRONTMENUS ADD WIDTH INTEGER DEFAULT 0 NOT NULL;
ALTER TABLE G_FRONTMENUS ADD HEIGHT INTEGER DEFAULT 0 NOT NULL;
ALTER TABLE G_FRONTMENUS ADD IS_MAIN INTEGER DEFAULT 0 NOT NULL;

CREATE TABLE G_GRANTEDFRONTMENUS(
  NID Integer NOT NULL,
  NID_USERS Integer NOT NULL,
  NID_FRONTMENUS Integer NOT NULL,
  NSTATUS Integer NOT NULL,
  CONSTRAINT PK_GRANTEDFRONTMENUS PRIMARY KEY (NID)
);
ALTER TABLE G_GRANTEDFRONTMENUS ADD CONSTRAINT FK_GRANTEDFRONTMENUS_FRONTMENUS
  FOREIGN KEY (NID_FRONTMENUS) REFERENCES G_FRONTMENUS (NID);
ALTER TABLE G_GRANTEDFRONTMENUS ADD CONSTRAINT FK_GRANTEDFRONTMENUS_USERS
  FOREIGN KEY (NID_USERS) REFERENCES G_USERS (NID);

CREATE GENERATOR G_GRANTEDFRONTMENUS_NID;

SET TERM !! ;
CREATE TRIGGER G_GRANTEDFRONTMENUS_BI FOR G_GRANTEDFRONTMENUS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NID IS NULL) THEN
    NEW.NID = GEN_ID(G_GRANTEDFRONTMENUS_NID, 1);
END!!
SET TERM ; !!




